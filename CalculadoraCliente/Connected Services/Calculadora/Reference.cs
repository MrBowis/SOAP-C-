//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalculadoraCliente.Calculadora {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Operaciones", Namespace="http://schemas.datacontract.org/2004/07/Calculadora")]
    [System.SerializableAttribute()]
    public partial class Operaciones : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float Numero1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float Numero2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ResultadoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Numero1 {
            get {
                return this.Numero1Field;
            }
            set {
                if ((this.Numero1Field.Equals(value) != true)) {
                    this.Numero1Field = value;
                    this.RaisePropertyChanged("Numero1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Numero2 {
            get {
                return this.Numero2Field;
            }
            set {
                if ((this.Numero2Field.Equals(value) != true)) {
                    this.Numero2Field = value;
                    this.RaisePropertyChanged("Numero2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operacion {
            get {
                return this.OperacionField;
            }
            set {
                if ((object.ReferenceEquals(this.OperacionField, value) != true)) {
                    this.OperacionField = value;
                    this.RaisePropertyChanged("Operacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Resultado {
            get {
                return this.ResultadoField;
            }
            set {
                if ((this.ResultadoField.Equals(value) != true)) {
                    this.ResultadoField = value;
                    this.RaisePropertyChanged("Resultado");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Calculadora.ICalculadora")]
    public interface ICalculadora {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculadora/operar", ReplyAction="http://tempuri.org/ICalculadora/operarResponse")]
        float operar(CalculadoraCliente.Calculadora.Operaciones operaciones);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculadora/operar", ReplyAction="http://tempuri.org/ICalculadora/operarResponse")]
        System.Threading.Tasks.Task<float> operarAsync(CalculadoraCliente.Calculadora.Operaciones operaciones);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculadoraChannel : CalculadoraCliente.Calculadora.ICalculadora, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculadoraClient : System.ServiceModel.ClientBase<CalculadoraCliente.Calculadora.ICalculadora>, CalculadoraCliente.Calculadora.ICalculadora {
        
        public CalculadoraClient() {
        }
        
        public CalculadoraClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculadoraClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculadoraClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculadoraClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public float operar(CalculadoraCliente.Calculadora.Operaciones operaciones) {
            return base.Channel.operar(operaciones);
        }
        
        public System.Threading.Tasks.Task<float> operarAsync(CalculadoraCliente.Calculadora.Operaciones operaciones) {
            return base.Channel.operarAsync(operaciones);
        }
    }
}
